
/*
 * This file is part of GenoViewer.
 *
 * GenoViewer is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * GenoViewer is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with GenoViewer.  If not, see <http://www.gnu.org/licenses/>.
 */

/*
 * About.java
 *
 * Created on 2010.07.21., 13:11:19
 */
package hu.astrid.viewer.gui.help;

import hu.astrid.viewer.Viewer;
import java.awt.Desktop;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.ResourceBundle;
import javax.swing.text.BadLocationException;
import javax.swing.text.Document;
import org.apache.log4j.Logger;

/**
 *
 * @author Mat
 */
public class About extends javax.swing.JDialog {

	private static final long serialVersionUID = 1L;
	private final ResourceBundle about = java.util.ResourceBundle.getBundle("about", Viewer.getViewerLocale());

	/** Creates new form About
	 * @param parent
	 * @param modal
	 */
	public About(java.awt.Frame parent, boolean modal) {
		super(parent, modal);
		initComponents();

		BufferedReader reader = null;
		try {
			reader = new BufferedReader(new InputStreamReader(About.class.getResourceAsStream("/License.txt")));
			String line;
			while ((line = reader.readLine()) != null) {
				Document doc = licenseTextPane.getDocument();
				try {
					doc.insertString(doc.getLength(), line + "\n", null);
				} catch (BadLocationException ex) {
					Logger.getLogger(About.class).error(ex.getMessage(), ex);
				}
			}
		} catch (IOException ex) {
			Logger.getLogger(About.class).error(ex.getMessage(), ex);
		} finally {
			if (reader != null) {
				try {
					reader.close();
				} catch (IOException ex) {
					Logger.getLogger(About.class).error(ex.getMessage(), ex);
				}
			}
		}
		licenseTextPane.setCaretPosition(0);
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        aboutName = new javax.swing.JLabel();
        aboutVersion = new javax.swing.JLabel();
        aboutCompany = new javax.swing.JLabel();
        aboutHomepage = new javax.swing.JLabel();
        licenseScrollPane = new javax.swing.JScrollPane();
        licenseTextPane = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(java.text.MessageFormat.format(about.getString("aboutTitle"), new Object[] {about.getString("app.name")})); // NOI18N

        aboutName.setFont(aboutName.getFont().deriveFont((aboutName.getFont().getStyle() & ~java.awt.Font.ITALIC) | java.awt.Font.BOLD, aboutName.getFont().getSize()+3));
        aboutName.setText(about.getString("app.name")); // NOI18N

        aboutVersion.setText(java.text.MessageFormat.format(about.getString("aboutVersion"), new Object[] {about.getString("app.versionNumber"), about.getString("app.buildNumber")})); // NOI18N

        aboutCompany.setText("<html><a href=\"\"> "+about.getString("app.vendor")+"</a></html>"); // NOI18N
        aboutCompany.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        aboutCompany.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                aboutCompanyMouseClicked(evt);
            }
        });

        aboutHomepage.setText("<html><a href=\"\"> "+about.getString("app.homepage")+"</a></html>"); // NOI18N
        aboutHomepage.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        aboutHomepage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                aboutHomepageMouseClicked(evt);
            }
        });

        licenseTextPane.setEditable(false);
        licenseTextPane.setAutoscrolls(false);
        licenseScrollPane.setViewportView(licenseTextPane);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hu/astrid/viewer/gui/about.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(licenseScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(aboutCompany)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 220, Short.MAX_VALUE)
                        .addComponent(aboutHomepage))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(aboutName)
                            .addComponent(aboutVersion))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 117, Short.MAX_VALUE)
                        .addComponent(jLabel1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(aboutName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(aboutVersion))
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(licenseScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(aboutCompany)
                    .addComponent(aboutHomepage))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void aboutCompanyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aboutCompanyMouseClicked
		try {
			open(new URI(about.getString("app.vendorHomepage")));
		} catch (URISyntaxException ex) {
			Logger.getLogger(About.class).error(ex.getMessage(), ex);
		}
	}//GEN-LAST:event_aboutCompanyMouseClicked

	private void aboutHomepageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aboutHomepageMouseClicked
		try {
			open(new URI(about.getString("app.homepage")));
		} catch (URISyntaxException ex) {
			Logger.getLogger(About.class).error(ex.getMessage(), ex);
		}
	}//GEN-LAST:event_aboutHomepageMouseClicked
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel aboutCompany;
    private javax.swing.JLabel aboutHomepage;
    private javax.swing.JLabel aboutName;
    private javax.swing.JLabel aboutVersion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane licenseScrollPane;
    private javax.swing.JTextPane licenseTextPane;
    // End of variables declaration//GEN-END:variables

	private static void open(URI uri) {
		if (Desktop.isDesktopSupported()) {
			Desktop desktop = Desktop.getDesktop();
			try {
				desktop.browse(uri);
			} catch (IOException e) {
				// TODO: error handling
			}
		} else {
			// TODO: error handling
		}
	}
}
